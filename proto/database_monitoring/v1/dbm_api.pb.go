// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.1
// source: database_monitoring/v1/dbm_api.proto

package dbmv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListSnapshotSummariesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Server string                 `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *ListSnapshotSummariesRequest) Reset() {
	*x = ListSnapshotSummariesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSnapshotSummariesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotSummariesRequest) ProtoMessage() {}

func (x *ListSnapshotSummariesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotSummariesRequest.ProtoReflect.Descriptor instead.
func (*ListSnapshotSummariesRequest) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{0}
}

func (x *ListSnapshotSummariesRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *ListSnapshotSummariesRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *ListSnapshotSummariesRequest) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

type SnapshotSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp              *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Server                 *ServerMetadata        `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
	ConnectionsByWaitEvent map[string]int64       `protobuf:"bytes,4,rep,name=connections_by_wait_event,json=connectionsByWaitEvent,proto3" json:"connections_by_wait_event,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TimeMsByWaitEvent      map[string]int64       `protobuf:"bytes,5,rep,name=time_ms_by_wait_event,json=timeMsByWaitEvent,proto3" json:"time_ms_by_wait_event,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *SnapshotSummary) Reset() {
	*x = SnapshotSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotSummary) ProtoMessage() {}

func (x *SnapshotSummary) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotSummary.ProtoReflect.Descriptor instead.
func (*SnapshotSummary) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{1}
}

func (x *SnapshotSummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SnapshotSummary) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SnapshotSummary) GetServer() *ServerMetadata {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *SnapshotSummary) GetConnectionsByWaitEvent() map[string]int64 {
	if x != nil {
		return x.ConnectionsByWaitEvent
	}
	return nil
}

func (x *SnapshotSummary) GetTimeMsByWaitEvent() map[string]int64 {
	if x != nil {
		return x.TimeMsByWaitEvent
	}
	return nil
}

type ListSnapshotSummariesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapSummaries []*SnapshotSummary `protobuf:"bytes,1,rep,name=snap_summaries,json=snapSummaries,proto3" json:"snap_summaries,omitempty"`
}

func (x *ListSnapshotSummariesResponse) Reset() {
	*x = ListSnapshotSummariesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSnapshotSummariesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotSummariesResponse) ProtoMessage() {}

func (x *ListSnapshotSummariesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotSummariesResponse.ProtoReflect.Descriptor instead.
func (*ListSnapshotSummariesResponse) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{2}
}

func (x *ListSnapshotSummariesResponse) GetSnapSummaries() []*SnapshotSummary {
	if x != nil {
		return x.SnapSummaries
	}
	return nil
}

type ListQueryMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Host       string                 `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Database   string                 `protobuf:"bytes,4,opt,name=database,proto3" json:"database,omitempty"`
	PageSize   int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNumber int64                  `protobuf:"varint,6,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
}

func (x *ListQueryMetricsRequest) Reset() {
	*x = ListQueryMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQueryMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueryMetricsRequest) ProtoMessage() {}

func (x *ListQueryMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueryMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListQueryMetricsRequest) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{3}
}

func (x *ListQueryMetricsRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *ListQueryMetricsRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *ListQueryMetricsRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ListQueryMetricsRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ListQueryMetricsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListQueryMetricsRequest) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type ListQueryMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*QueryMetric `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *ListQueryMetricsResponse) Reset() {
	*x = ListQueryMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQueryMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueryMetricsResponse) ProtoMessage() {}

func (x *ListQueryMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueryMetricsResponse.ProtoReflect.Descriptor instead.
func (*ListQueryMetricsResponse) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{4}
}

func (x *ListQueryMetricsResponse) GetMetrics() []*QueryMetric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type GetQueryMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Host      string                 `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	SqlHandle []byte                 `protobuf:"bytes,4,opt,name=sql_handle,json=sqlHandle,proto3" json:"sql_handle,omitempty"`
}

func (x *GetQueryMetricsRequest) Reset() {
	*x = GetQueryMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueryMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryMetricsRequest) ProtoMessage() {}

func (x *GetQueryMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetQueryMetricsRequest) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{5}
}

func (x *GetQueryMetricsRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetQueryMetricsRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *GetQueryMetricsRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GetQueryMetricsRequest) GetSqlHandle() []byte {
	if x != nil {
		return x.SqlHandle
	}
	return nil
}

type GetQueryMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics *QueryMetric `protobuf:"bytes,1,opt,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *GetQueryMetricsResponse) Reset() {
	*x = GetQueryMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueryMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryMetricsResponse) ProtoMessage() {}

func (x *GetQueryMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetQueryMetricsResponse) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{6}
}

func (x *GetQueryMetricsResponse) GetMetrics() *QueryMetric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type GetSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSnapshotRequest) Reset() {
	*x = GetSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSnapshotRequest) ProtoMessage() {}

func (x *GetSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSnapshotRequest.ProtoReflect.Descriptor instead.
func (*GetSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetSnapshotRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshot *DBSnapshot `protobuf:"bytes,1,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
}

func (x *GetSnapshotResponse) Reset() {
	*x = GetSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSnapshotResponse) ProtoMessage() {}

func (x *GetSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSnapshotResponse.ProtoReflect.Descriptor instead.
func (*GetSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{8}
}

func (x *GetSnapshotResponse) GetSnapshot() *DBSnapshot {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type ListSnapshotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Host       string                 `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Database   string                 `protobuf:"bytes,4,opt,name=database,proto3" json:"database,omitempty"`
	PageSize   int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNumber int64                  `protobuf:"varint,6,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
}

func (x *ListSnapshotsRequest) Reset() {
	*x = ListSnapshotsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSnapshotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotsRequest) ProtoMessage() {}

func (x *ListSnapshotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotsRequest.ProtoReflect.Descriptor instead.
func (*ListSnapshotsRequest) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{9}
}

func (x *ListSnapshotsRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *ListSnapshotsRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *ListSnapshotsRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ListSnapshotsRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ListSnapshotsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSnapshotsRequest) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type ListSnapshotsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshots  []*DBSnapshot `protobuf:"bytes,1,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
	PageNumber int64         `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	TotalCount int64         `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListSnapshotsResponse) Reset() {
	*x = ListSnapshotsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSnapshotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotsResponse) ProtoMessage() {}

func (x *ListSnapshotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotsResponse.ProtoReflect.Descriptor instead.
func (*ListSnapshotsResponse) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{10}
}

func (x *ListSnapshotsResponse) GetSnapshots() []*DBSnapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

func (x *ListSnapshotsResponse) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListSnapshotsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ListServerSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *ListServerSummaryRequest) Reset() {
	*x = ListServerSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServerSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServerSummaryRequest) ProtoMessage() {}

func (x *ListServerSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServerSummaryRequest.ProtoReflect.Descriptor instead.
func (*ListServerSummaryRequest) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{11}
}

func (x *ListServerSummaryRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *ListServerSummaryRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

type ListServerSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servers []*ServerSummary `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *ListServerSummaryResponse) Reset() {
	*x = ListServerSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServerSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServerSummaryResponse) ProtoMessage() {}

func (x *ListServerSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServerSummaryResponse.ProtoReflect.Descriptor instead.
func (*ListServerSummaryResponse) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{12}
}

func (x *ListServerSummaryResponse) GetServers() []*ServerSummary {
	if x != nil {
		return x.Servers
	}
	return nil
}

type ListServersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *ListServersRequest) Reset() {
	*x = ListServersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersRequest) ProtoMessage() {}

func (x *ListServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersRequest.ProtoReflect.Descriptor instead.
func (*ListServersRequest) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{13}
}

func (x *ListServersRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *ListServersRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

type ListServersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servers []*ServerMetadata `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *ListServersResponse) Reset() {
	*x = ListServersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersResponse) ProtoMessage() {}

func (x *ListServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersResponse.ProtoReflect.Descriptor instead.
func (*ListServersResponse) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{14}
}

func (x *ListServersResponse) GetServers() []*ServerMetadata {
	if x != nil {
		return x.Servers
	}
	return nil
}

type ServerSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                   string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                   string           `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Connections            int32            `protobuf:"varint,3,opt,name=connections,proto3" json:"connections,omitempty"`
	RequestRate            float64          `protobuf:"fixed64,4,opt,name=request_rate,json=requestRate,proto3" json:"request_rate,omitempty"`
	ConnectionsByWaitGroup map[string]int32 `protobuf:"bytes,5,rep,name=connections_by_wait_group,json=connectionsByWaitGroup,proto3" json:"connections_by_wait_group,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ServerSummary) Reset() {
	*x = ServerSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSummary) ProtoMessage() {}

func (x *ServerSummary) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSummary.ProtoReflect.Descriptor instead.
func (*ServerSummary) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{15}
}

func (x *ServerSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerSummary) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ServerSummary) GetConnections() int32 {
	if x != nil {
		return x.Connections
	}
	return 0
}

func (x *ServerSummary) GetRequestRate() float64 {
	if x != nil {
		return x.RequestRate
	}
	return 0
}

func (x *ServerSummary) GetConnectionsByWaitGroup() map[string]int32 {
	if x != nil {
		return x.ConnectionsByWaitGroup
	}
	return nil
}

type GetSampleDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SampleId []byte `protobuf:"bytes,1,opt,name=sample_id,json=sampleId,proto3" json:"sample_id,omitempty"`
	SnapId   string `protobuf:"bytes,2,opt,name=snap_id,json=snapId,proto3" json:"snap_id,omitempty"`
}

func (x *GetSampleDetailsRequest) Reset() {
	*x = GetSampleDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSampleDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSampleDetailsRequest) ProtoMessage() {}

func (x *GetSampleDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSampleDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetSampleDetailsRequest) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{16}
}

func (x *GetSampleDetailsRequest) GetSampleId() []byte {
	if x != nil {
		return x.SampleId
	}
	return nil
}

func (x *GetSampleDetailsRequest) GetSnapId() string {
	if x != nil {
		return x.SnapId
	}
	return ""
}

type BlockChain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roots []*BlockChain_BlockingNode `protobuf:"bytes,1,rep,name=roots,proto3" json:"roots,omitempty"`
}

func (x *BlockChain) Reset() {
	*x = BlockChain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockChain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockChain) ProtoMessage() {}

func (x *BlockChain) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockChain.ProtoReflect.Descriptor instead.
func (*BlockChain) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{17}
}

func (x *BlockChain) GetRoots() []*BlockChain_BlockingNode {
	if x != nil {
		return x.Roots
	}
	return nil
}

type GetSampleDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuerySample *QuerySample         `protobuf:"bytes,1,opt,name=query_sample,json=querySample,proto3" json:"query_sample,omitempty"`
	ParsedPlan  *ParsedExecutionPlan `protobuf:"bytes,2,opt,name=parsed_plan,json=parsedPlan,proto3" json:"parsed_plan,omitempty"`
	BlockChain  *BlockChain          `protobuf:"bytes,3,opt,name=block_chain,json=blockChain,proto3" json:"block_chain,omitempty"`
}

func (x *GetSampleDetailsResponse) Reset() {
	*x = GetSampleDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSampleDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSampleDetailsResponse) ProtoMessage() {}

func (x *GetSampleDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSampleDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetSampleDetailsResponse) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{18}
}

func (x *GetSampleDetailsResponse) GetQuerySample() *QuerySample {
	if x != nil {
		return x.QuerySample
	}
	return nil
}

func (x *GetSampleDetailsResponse) GetParsedPlan() *ParsedExecutionPlan {
	if x != nil {
		return x.ParsedPlan
	}
	return nil
}

func (x *GetSampleDetailsResponse) GetBlockChain() *BlockChain {
	if x != nil {
		return x.BlockChain
	}
	return nil
}

type GetNormalizedQueryDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryHash string                 `protobuf:"bytes,1,opt,name=query_hash,json=queryHash,proto3" json:"query_hash,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *GetNormalizedQueryDetailsRequest) Reset() {
	*x = GetNormalizedQueryDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNormalizedQueryDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNormalizedQueryDetailsRequest) ProtoMessage() {}

func (x *GetNormalizedQueryDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNormalizedQueryDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetNormalizedQueryDetailsRequest) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{19}
}

func (x *GetNormalizedQueryDetailsRequest) GetQueryHash() string {
	if x != nil {
		return x.QueryHash
	}
	return ""
}

func (x *GetNormalizedQueryDetailsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetNormalizedQueryDetailsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type GetNormalizedQueryDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNormalizedQueryDetailsResponse) Reset() {
	*x = GetNormalizedQueryDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNormalizedQueryDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNormalizedQueryDetailsResponse) ProtoMessage() {}

func (x *GetNormalizedQueryDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNormalizedQueryDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetNormalizedQueryDetailsResponse) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{20}
}

type GetNormalizedQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryHash string                 `protobuf:"bytes,1,opt,name=query_hash,json=queryHash,proto3" json:"query_hash,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *GetNormalizedQueryRequest) Reset() {
	*x = GetNormalizedQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNormalizedQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNormalizedQueryRequest) ProtoMessage() {}

func (x *GetNormalizedQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNormalizedQueryRequest.ProtoReflect.Descriptor instead.
func (*GetNormalizedQueryRequest) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{21}
}

func (x *GetNormalizedQueryRequest) GetQueryHash() string {
	if x != nil {
		return x.QueryHash
	}
	return ""
}

func (x *GetNormalizedQueryRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetNormalizedQueryRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type GetNormalizedQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionsOverTime []*GetNormalizedQueryResponse_ConnectionsDataPoint `protobuf:"bytes,1,rep,name=connections_over_time,json=connectionsOverTime,proto3" json:"connections_over_time,omitempty"`
	ExecutionPlans      []*GetNormalizedQueryResponse_ExecutionPlanUsage   `protobuf:"bytes,2,rep,name=execution_plans,json=executionPlans,proto3" json:"execution_plans,omitempty"`
	QueryMetrics        []*QueryMetric                                     `protobuf:"bytes,3,rep,name=query_metrics,json=queryMetrics,proto3" json:"query_metrics,omitempty"`
	BlockingActivity    []*BlockChain                                      `protobuf:"bytes,4,rep,name=blocking_activity,json=blockingActivity,proto3" json:"blocking_activity,omitempty"`
}

func (x *GetNormalizedQueryResponse) Reset() {
	*x = GetNormalizedQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNormalizedQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNormalizedQueryResponse) ProtoMessage() {}

func (x *GetNormalizedQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNormalizedQueryResponse.ProtoReflect.Descriptor instead.
func (*GetNormalizedQueryResponse) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{22}
}

func (x *GetNormalizedQueryResponse) GetConnectionsOverTime() []*GetNormalizedQueryResponse_ConnectionsDataPoint {
	if x != nil {
		return x.ConnectionsOverTime
	}
	return nil
}

func (x *GetNormalizedQueryResponse) GetExecutionPlans() []*GetNormalizedQueryResponse_ExecutionPlanUsage {
	if x != nil {
		return x.ExecutionPlans
	}
	return nil
}

func (x *GetNormalizedQueryResponse) GetQueryMetrics() []*QueryMetric {
	if x != nil {
		return x.QueryMetrics
	}
	return nil
}

func (x *GetNormalizedQueryResponse) GetBlockingActivity() []*BlockChain {
	if x != nil {
		return x.BlockingActivity
	}
	return nil
}

type BlockChain_BlockingNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuerySample *QuerySample               `protobuf:"bytes,1,opt,name=query_sample,json=querySample,proto3" json:"query_sample,omitempty"`
	ChildNodes  []*BlockChain_BlockingNode `protobuf:"bytes,2,rep,name=child_nodes,json=childNodes,proto3" json:"child_nodes,omitempty"`
}

func (x *BlockChain_BlockingNode) Reset() {
	*x = BlockChain_BlockingNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockChain_BlockingNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockChain_BlockingNode) ProtoMessage() {}

func (x *BlockChain_BlockingNode) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockChain_BlockingNode.ProtoReflect.Descriptor instead.
func (*BlockChain_BlockingNode) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{17, 0}
}

func (x *BlockChain_BlockingNode) GetQuerySample() *QuerySample {
	if x != nil {
		return x.QuerySample
	}
	return nil
}

func (x *BlockChain_BlockingNode) GetChildNodes() []*BlockChain_BlockingNode {
	if x != nil {
		return x.ChildNodes
	}
	return nil
}

type GetNormalizedQueryResponse_ConnectionsDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionsByWaitType map[string]int64       `protobuf:"bytes,1,rep,name=connections_by_wait_type,json=connectionsByWaitType,proto3" json:"connections_by_wait_type,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Timestamp             *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *GetNormalizedQueryResponse_ConnectionsDataPoint) Reset() {
	*x = GetNormalizedQueryResponse_ConnectionsDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNormalizedQueryResponse_ConnectionsDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNormalizedQueryResponse_ConnectionsDataPoint) ProtoMessage() {}

func (x *GetNormalizedQueryResponse_ConnectionsDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNormalizedQueryResponse_ConnectionsDataPoint.ProtoReflect.Descriptor instead.
func (*GetNormalizedQueryResponse_ConnectionsDataPoint) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{22, 0}
}

func (x *GetNormalizedQueryResponse_ConnectionsDataPoint) GetConnectionsByWaitType() map[string]int64 {
	if x != nil {
		return x.ConnectionsByWaitType
	}
	return nil
}

func (x *GetNormalizedQueryResponse_ConnectionsDataPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type GetNormalizedQueryResponse_ExecutionPlanUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecPlan        *ExecutionPlan `protobuf:"bytes,1,opt,name=exec_plan,json=execPlan,proto3" json:"exec_plan,omitempty"`
	NumberOfSamples int64          `protobuf:"varint,2,opt,name=number_of_samples,json=numberOfSamples,proto3" json:"number_of_samples,omitempty"`
}

func (x *GetNormalizedQueryResponse_ExecutionPlanUsage) Reset() {
	*x = GetNormalizedQueryResponse_ExecutionPlanUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNormalizedQueryResponse_ExecutionPlanUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNormalizedQueryResponse_ExecutionPlanUsage) ProtoMessage() {}

func (x *GetNormalizedQueryResponse_ExecutionPlanUsage) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_dbm_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNormalizedQueryResponse_ExecutionPlanUsage.ProtoReflect.Descriptor instead.
func (*GetNormalizedQueryResponse_ExecutionPlanUsage) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_dbm_api_proto_rawDescGZIP(), []int{22, 1}
}

func (x *GetNormalizedQueryResponse_ExecutionPlanUsage) GetExecPlan() *ExecutionPlan {
	if x != nil {
		return x.ExecPlan
	}
	return nil
}

func (x *GetNormalizedQueryResponse_ExecutionPlanUsage) GetNumberOfSamples() int64 {
	if x != nil {
		return x.NumberOfSamples
	}
	return 0
}

var File_database_monitoring_v1_dbm_api_proto protoreflect.FileDescriptor

var file_database_monitoring_v1_dbm_api_proto_rawDesc = []byte{
	0x0a, 0x24, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x62, 0x6d, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x25, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x22, 0x9e, 0x04, 0x0a, 0x0f, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x3e, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x7e, 0x0a, 0x19, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x62,
	0x79, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x43, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x57, 0x61, 0x69, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x16, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x57, 0x61, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x70, 0x0a, 0x15, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x77, 0x61,
	0x69, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x42, 0x79,
	0x57, 0x61, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11,
	0x74, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x42, 0x79, 0x57, 0x61, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x1a, 0x49, 0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x79, 0x57, 0x61, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x44, 0x0a, 0x16,
	0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x42, 0x79, 0x57, 0x61, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x6f, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x5f, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x69, 0x65, 0x73, 0x22, 0xe7, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x59, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52,
	0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x71, 0x6c, 0x5f, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x71, 0x6c,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x58, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x55, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x42, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0xe4, 0x01,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x9b, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40,
	0x0a, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x42, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x7a, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x5c,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x74, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x22, 0x57, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0xc5, 0x02, 0x0a, 0x0d,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x7c, 0x0a, 0x19, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x77, 0x61, 0x69,
	0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x79, 0x57, 0x61, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x16, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x57,
	0x61, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x49, 0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x57, 0x61, 0x69, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x4f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x6e, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6e,
	0x61, 0x70, 0x49, 0x64, 0x22, 0xfe, 0x01, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x12, 0x45, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x74, 0x73, 0x1a, 0xa8, 0x01, 0x0a, 0x0c, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xf5, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x0b, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0a, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x43, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x22, 0xb3, 0x01,
	0x0a, 0x20, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe6, 0x06, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x13,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x6e, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x73, 0x12, 0x48, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52,
	0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x4f, 0x0a,
	0x11, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x10, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x1a, 0xb8,
	0x02, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x9b, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x62, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x57, 0x61, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x15,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x57, 0x61, 0x69,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a,
	0x48, 0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79,
	0x57, 0x61, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x84, 0x01, 0x0a, 0x12, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x42, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63,
	0x50, 0x6c, 0x61, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f,
	0x66, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x32, 0xa6, 0x08, 0x0a, 0x06, 0x44, 0x42, 0x4d, 0x41, 0x70, 0x69, 0x12, 0x6c, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x34, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x66, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12,
	0x2a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x30, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x66, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x12, 0x2a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x2f,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x72, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x12, 0x2e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2f, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x31, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x55, 0x5a, 0x53, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x75, 0x69, 0x6c, 0x68, 0x65, 0x72, 0x6d,
	0x65, 0x61, 0x72, 0x70, 0x61, 0x73, 0x73, 0x6f, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x2d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x62, 0x6d, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_database_monitoring_v1_dbm_api_proto_rawDescOnce sync.Once
	file_database_monitoring_v1_dbm_api_proto_rawDescData = file_database_monitoring_v1_dbm_api_proto_rawDesc
)

func file_database_monitoring_v1_dbm_api_proto_rawDescGZIP() []byte {
	file_database_monitoring_v1_dbm_api_proto_rawDescOnce.Do(func() {
		file_database_monitoring_v1_dbm_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_database_monitoring_v1_dbm_api_proto_rawDescData)
	})
	return file_database_monitoring_v1_dbm_api_proto_rawDescData
}

var file_database_monitoring_v1_dbm_api_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_database_monitoring_v1_dbm_api_proto_goTypes = []any{
	(*ListSnapshotSummariesRequest)(nil),                    // 0: database_monitoring.v1.ListSnapshotSummariesRequest
	(*SnapshotSummary)(nil),                                 // 1: database_monitoring.v1.SnapshotSummary
	(*ListSnapshotSummariesResponse)(nil),                   // 2: database_monitoring.v1.ListSnapshotSummariesResponse
	(*ListQueryMetricsRequest)(nil),                         // 3: database_monitoring.v1.ListQueryMetricsRequest
	(*ListQueryMetricsResponse)(nil),                        // 4: database_monitoring.v1.ListQueryMetricsResponse
	(*GetQueryMetricsRequest)(nil),                          // 5: database_monitoring.v1.GetQueryMetricsRequest
	(*GetQueryMetricsResponse)(nil),                         // 6: database_monitoring.v1.GetQueryMetricsResponse
	(*GetSnapshotRequest)(nil),                              // 7: database_monitoring.v1.GetSnapshotRequest
	(*GetSnapshotResponse)(nil),                             // 8: database_monitoring.v1.GetSnapshotResponse
	(*ListSnapshotsRequest)(nil),                            // 9: database_monitoring.v1.ListSnapshotsRequest
	(*ListSnapshotsResponse)(nil),                           // 10: database_monitoring.v1.ListSnapshotsResponse
	(*ListServerSummaryRequest)(nil),                        // 11: database_monitoring.v1.ListServerSummaryRequest
	(*ListServerSummaryResponse)(nil),                       // 12: database_monitoring.v1.ListServerSummaryResponse
	(*ListServersRequest)(nil),                              // 13: database_monitoring.v1.ListServersRequest
	(*ListServersResponse)(nil),                             // 14: database_monitoring.v1.ListServersResponse
	(*ServerSummary)(nil),                                   // 15: database_monitoring.v1.ServerSummary
	(*GetSampleDetailsRequest)(nil),                         // 16: database_monitoring.v1.GetSampleDetailsRequest
	(*BlockChain)(nil),                                      // 17: database_monitoring.v1.BlockChain
	(*GetSampleDetailsResponse)(nil),                        // 18: database_monitoring.v1.GetSampleDetailsResponse
	(*GetNormalizedQueryDetailsRequest)(nil),                // 19: database_monitoring.v1.GetNormalizedQueryDetailsRequest
	(*GetNormalizedQueryDetailsResponse)(nil),               // 20: database_monitoring.v1.GetNormalizedQueryDetailsResponse
	(*GetNormalizedQueryRequest)(nil),                       // 21: database_monitoring.v1.GetNormalizedQueryRequest
	(*GetNormalizedQueryResponse)(nil),                      // 22: database_monitoring.v1.GetNormalizedQueryResponse
	nil,                                                     // 23: database_monitoring.v1.SnapshotSummary.ConnectionsByWaitEventEntry
	nil,                                                     // 24: database_monitoring.v1.SnapshotSummary.TimeMsByWaitEventEntry
	nil,                                                     // 25: database_monitoring.v1.ServerSummary.ConnectionsByWaitGroupEntry
	(*BlockChain_BlockingNode)(nil),                         // 26: database_monitoring.v1.BlockChain.BlockingNode
	(*GetNormalizedQueryResponse_ConnectionsDataPoint)(nil), // 27: database_monitoring.v1.GetNormalizedQueryResponse.ConnectionsDataPoint
	(*GetNormalizedQueryResponse_ExecutionPlanUsage)(nil),   // 28: database_monitoring.v1.GetNormalizedQueryResponse.ExecutionPlanUsage
	nil,                           // 29: database_monitoring.v1.GetNormalizedQueryResponse.ConnectionsDataPoint.ConnectionsByWaitTypeEntry
	(*timestamppb.Timestamp)(nil), // 30: google.protobuf.Timestamp
	(*ServerMetadata)(nil),        // 31: database_monitoring.v1.ServerMetadata
	(*QueryMetric)(nil),           // 32: database_monitoring.v1.QueryMetric
	(*DBSnapshot)(nil),            // 33: database_monitoring.v1.DBSnapshot
	(*QuerySample)(nil),           // 34: database_monitoring.v1.QuerySample
	(*ParsedExecutionPlan)(nil),   // 35: database_monitoring.v1.ParsedExecutionPlan
	(*ExecutionPlan)(nil),         // 36: database_monitoring.v1.ExecutionPlan
}
var file_database_monitoring_v1_dbm_api_proto_depIdxs = []int32{
	30, // 0: database_monitoring.v1.ListSnapshotSummariesRequest.start:type_name -> google.protobuf.Timestamp
	30, // 1: database_monitoring.v1.ListSnapshotSummariesRequest.end:type_name -> google.protobuf.Timestamp
	30, // 2: database_monitoring.v1.SnapshotSummary.timestamp:type_name -> google.protobuf.Timestamp
	31, // 3: database_monitoring.v1.SnapshotSummary.server:type_name -> database_monitoring.v1.ServerMetadata
	23, // 4: database_monitoring.v1.SnapshotSummary.connections_by_wait_event:type_name -> database_monitoring.v1.SnapshotSummary.ConnectionsByWaitEventEntry
	24, // 5: database_monitoring.v1.SnapshotSummary.time_ms_by_wait_event:type_name -> database_monitoring.v1.SnapshotSummary.TimeMsByWaitEventEntry
	1,  // 6: database_monitoring.v1.ListSnapshotSummariesResponse.snap_summaries:type_name -> database_monitoring.v1.SnapshotSummary
	30, // 7: database_monitoring.v1.ListQueryMetricsRequest.start:type_name -> google.protobuf.Timestamp
	30, // 8: database_monitoring.v1.ListQueryMetricsRequest.end:type_name -> google.protobuf.Timestamp
	32, // 9: database_monitoring.v1.ListQueryMetricsResponse.metrics:type_name -> database_monitoring.v1.QueryMetric
	30, // 10: database_monitoring.v1.GetQueryMetricsRequest.start:type_name -> google.protobuf.Timestamp
	30, // 11: database_monitoring.v1.GetQueryMetricsRequest.end:type_name -> google.protobuf.Timestamp
	32, // 12: database_monitoring.v1.GetQueryMetricsResponse.metrics:type_name -> database_monitoring.v1.QueryMetric
	33, // 13: database_monitoring.v1.GetSnapshotResponse.snapshot:type_name -> database_monitoring.v1.DBSnapshot
	30, // 14: database_monitoring.v1.ListSnapshotsRequest.start:type_name -> google.protobuf.Timestamp
	30, // 15: database_monitoring.v1.ListSnapshotsRequest.end:type_name -> google.protobuf.Timestamp
	33, // 16: database_monitoring.v1.ListSnapshotsResponse.snapshots:type_name -> database_monitoring.v1.DBSnapshot
	30, // 17: database_monitoring.v1.ListServerSummaryRequest.start:type_name -> google.protobuf.Timestamp
	30, // 18: database_monitoring.v1.ListServerSummaryRequest.end:type_name -> google.protobuf.Timestamp
	15, // 19: database_monitoring.v1.ListServerSummaryResponse.servers:type_name -> database_monitoring.v1.ServerSummary
	30, // 20: database_monitoring.v1.ListServersRequest.start:type_name -> google.protobuf.Timestamp
	30, // 21: database_monitoring.v1.ListServersRequest.end:type_name -> google.protobuf.Timestamp
	31, // 22: database_monitoring.v1.ListServersResponse.servers:type_name -> database_monitoring.v1.ServerMetadata
	25, // 23: database_monitoring.v1.ServerSummary.connections_by_wait_group:type_name -> database_monitoring.v1.ServerSummary.ConnectionsByWaitGroupEntry
	26, // 24: database_monitoring.v1.BlockChain.roots:type_name -> database_monitoring.v1.BlockChain.BlockingNode
	34, // 25: database_monitoring.v1.GetSampleDetailsResponse.query_sample:type_name -> database_monitoring.v1.QuerySample
	35, // 26: database_monitoring.v1.GetSampleDetailsResponse.parsed_plan:type_name -> database_monitoring.v1.ParsedExecutionPlan
	17, // 27: database_monitoring.v1.GetSampleDetailsResponse.block_chain:type_name -> database_monitoring.v1.BlockChain
	30, // 28: database_monitoring.v1.GetNormalizedQueryDetailsRequest.start_time:type_name -> google.protobuf.Timestamp
	30, // 29: database_monitoring.v1.GetNormalizedQueryDetailsRequest.end_time:type_name -> google.protobuf.Timestamp
	30, // 30: database_monitoring.v1.GetNormalizedQueryRequest.start_time:type_name -> google.protobuf.Timestamp
	30, // 31: database_monitoring.v1.GetNormalizedQueryRequest.end_time:type_name -> google.protobuf.Timestamp
	27, // 32: database_monitoring.v1.GetNormalizedQueryResponse.connections_over_time:type_name -> database_monitoring.v1.GetNormalizedQueryResponse.ConnectionsDataPoint
	28, // 33: database_monitoring.v1.GetNormalizedQueryResponse.execution_plans:type_name -> database_monitoring.v1.GetNormalizedQueryResponse.ExecutionPlanUsage
	32, // 34: database_monitoring.v1.GetNormalizedQueryResponse.query_metrics:type_name -> database_monitoring.v1.QueryMetric
	17, // 35: database_monitoring.v1.GetNormalizedQueryResponse.blocking_activity:type_name -> database_monitoring.v1.BlockChain
	34, // 36: database_monitoring.v1.BlockChain.BlockingNode.query_sample:type_name -> database_monitoring.v1.QuerySample
	26, // 37: database_monitoring.v1.BlockChain.BlockingNode.child_nodes:type_name -> database_monitoring.v1.BlockChain.BlockingNode
	29, // 38: database_monitoring.v1.GetNormalizedQueryResponse.ConnectionsDataPoint.connections_by_wait_type:type_name -> database_monitoring.v1.GetNormalizedQueryResponse.ConnectionsDataPoint.ConnectionsByWaitTypeEntry
	30, // 39: database_monitoring.v1.GetNormalizedQueryResponse.ConnectionsDataPoint.timestamp:type_name -> google.protobuf.Timestamp
	36, // 40: database_monitoring.v1.GetNormalizedQueryResponse.ExecutionPlanUsage.exec_plan:type_name -> database_monitoring.v1.ExecutionPlan
	9,  // 41: database_monitoring.v1.DBMApi.ListSnapshots:input_type -> database_monitoring.v1.ListSnapshotsRequest
	0,  // 42: database_monitoring.v1.DBMApi.ListSnapshotSummaries:input_type -> database_monitoring.v1.ListSnapshotSummariesRequest
	7,  // 43: database_monitoring.v1.DBMApi.GetSnapshot:input_type -> database_monitoring.v1.GetSnapshotRequest
	11, // 44: database_monitoring.v1.DBMApi.ListServerSummary:input_type -> database_monitoring.v1.ListServerSummaryRequest
	13, // 45: database_monitoring.v1.DBMApi.ListServers:input_type -> database_monitoring.v1.ListServersRequest
	3,  // 46: database_monitoring.v1.DBMApi.ListQueryMetrics:input_type -> database_monitoring.v1.ListQueryMetricsRequest
	5,  // 47: database_monitoring.v1.DBMApi.ListQueryMetrics:input_type -> database_monitoring.v1.GetQueryMetricsRequest
	16, // 48: database_monitoring.v1.DBMApi.GetSampleDetails:input_type -> database_monitoring.v1.GetSampleDetailsRequest
	21, // 49: database_monitoring.v1.DBMApi.GetNormalizedQuery:input_type -> database_monitoring.v1.GetNormalizedQueryRequest
	10, // 50: database_monitoring.v1.DBMApi.ListSnapshots:output_type -> database_monitoring.v1.ListSnapshotsResponse
	2,  // 51: database_monitoring.v1.DBMApi.ListSnapshotSummaries:output_type -> database_monitoring.v1.ListSnapshotSummariesResponse
	8,  // 52: database_monitoring.v1.DBMApi.GetSnapshot:output_type -> database_monitoring.v1.GetSnapshotResponse
	12, // 53: database_monitoring.v1.DBMApi.ListServerSummary:output_type -> database_monitoring.v1.ListServerSummaryResponse
	14, // 54: database_monitoring.v1.DBMApi.ListServers:output_type -> database_monitoring.v1.ListServersResponse
	4,  // 55: database_monitoring.v1.DBMApi.ListQueryMetrics:output_type -> database_monitoring.v1.ListQueryMetricsResponse
	6,  // 56: database_monitoring.v1.DBMApi.ListQueryMetrics:output_type -> database_monitoring.v1.GetQueryMetricsResponse
	18, // 57: database_monitoring.v1.DBMApi.GetSampleDetails:output_type -> database_monitoring.v1.GetSampleDetailsResponse
	22, // 58: database_monitoring.v1.DBMApi.GetNormalizedQuery:output_type -> database_monitoring.v1.GetNormalizedQueryResponse
	50, // [50:59] is the sub-list for method output_type
	41, // [41:50] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_database_monitoring_v1_dbm_api_proto_init() }
func file_database_monitoring_v1_dbm_api_proto_init() {
	if File_database_monitoring_v1_dbm_api_proto != nil {
		return
	}
	file_database_monitoring_v1_snapshot_proto_init()
	file_database_monitoring_v1_sample_proto_init()
	file_database_monitoring_v1_execution_plan_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_database_monitoring_v1_dbm_api_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ListSnapshotSummariesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SnapshotSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListSnapshotSummariesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ListQueryMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ListQueryMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetQueryMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetQueryMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ListSnapshotsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ListSnapshotsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ListServerSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ListServerSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ListServersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ListServersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ServerSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetSampleDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*BlockChain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetSampleDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetNormalizedQueryDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetNormalizedQueryDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetNormalizedQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GetNormalizedQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*BlockChain_BlockingNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GetNormalizedQueryResponse_ConnectionsDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_monitoring_v1_dbm_api_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GetNormalizedQueryResponse_ExecutionPlanUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_database_monitoring_v1_dbm_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_database_monitoring_v1_dbm_api_proto_goTypes,
		DependencyIndexes: file_database_monitoring_v1_dbm_api_proto_depIdxs,
		MessageInfos:      file_database_monitoring_v1_dbm_api_proto_msgTypes,
	}.Build()
	File_database_monitoring_v1_dbm_api_proto = out.File
	file_database_monitoring_v1_dbm_api_proto_rawDesc = nil
	file_database_monitoring_v1_dbm_api_proto_goTypes = nil
	file_database_monitoring_v1_dbm_api_proto_depIdxs = nil
}
