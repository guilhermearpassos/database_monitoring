// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: database_monitoring/v1/sample.proto

package dbmv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QuerySample struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Status            string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	SqlHandle         []byte                 `protobuf:"bytes,2,opt,name=sql_handle,json=sqlHandle,proto3" json:"sql_handle,omitempty"`
	Text              string                 `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Blocked           bool                   `protobuf:"varint,4,opt,name=blocked,proto3" json:"blocked,omitempty"`
	Blocker           bool                   `protobuf:"varint,5,opt,name=blocker,proto3" json:"blocker,omitempty"`
	TimeElapsedMillis int64                  `protobuf:"varint,10,opt,name=time_elapsed_millis,json=timeElapsedMillis,proto3" json:"time_elapsed_millis,omitempty"`
	Session           *SessionMetadata       `protobuf:"bytes,6,opt,name=session,proto3" json:"session,omitempty"`
	Db                *DBMetadata            `protobuf:"bytes,7,opt,name=db,proto3" json:"db,omitempty"`
	BlockInfo         *BlockMetadata         `protobuf:"bytes,8,opt,name=block_info,json=blockInfo,proto3" json:"block_info,omitempty"`
	WaitInfo          *WaitMetadata          `protobuf:"bytes,9,opt,name=wait_info,json=waitInfo,proto3" json:"wait_info,omitempty"`
	SnapInfo          *SnapMetadata          `protobuf:"bytes,11,opt,name=snap_info,json=snapInfo,proto3" json:"snap_info,omitempty"`
	PlanHandle        []byte                 `protobuf:"bytes,12,opt,name=plan_handle,json=planHandle,proto3" json:"plan_handle,omitempty"`
	Id                string                 `protobuf:"bytes,13,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *QuerySample) Reset() {
	*x = QuerySample{}
	mi := &file_database_monitoring_v1_sample_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySample) ProtoMessage() {}

func (x *QuerySample) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_sample_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySample.ProtoReflect.Descriptor instead.
func (*QuerySample) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_sample_proto_rawDescGZIP(), []int{0}
}

func (x *QuerySample) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *QuerySample) GetSqlHandle() []byte {
	if x != nil {
		return x.SqlHandle
	}
	return nil
}

func (x *QuerySample) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *QuerySample) GetBlocked() bool {
	if x != nil {
		return x.Blocked
	}
	return false
}

func (x *QuerySample) GetBlocker() bool {
	if x != nil {
		return x.Blocker
	}
	return false
}

func (x *QuerySample) GetTimeElapsedMillis() int64 {
	if x != nil {
		return x.TimeElapsedMillis
	}
	return 0
}

func (x *QuerySample) GetSession() *SessionMetadata {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *QuerySample) GetDb() *DBMetadata {
	if x != nil {
		return x.Db
	}
	return nil
}

func (x *QuerySample) GetBlockInfo() *BlockMetadata {
	if x != nil {
		return x.BlockInfo
	}
	return nil
}

func (x *QuerySample) GetWaitInfo() *WaitMetadata {
	if x != nil {
		return x.WaitInfo
	}
	return nil
}

func (x *QuerySample) GetSnapInfo() *SnapMetadata {
	if x != nil {
		return x.SnapInfo
	}
	return nil
}

func (x *QuerySample) GetPlanHandle() []byte {
	if x != nil {
		return x.PlanHandle
	}
	return nil
}

func (x *QuerySample) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SnapMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapMetadata) Reset() {
	*x = SnapMetadata{}
	mi := &file_database_monitoring_v1_sample_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapMetadata) ProtoMessage() {}

func (x *SnapMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_sample_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapMetadata.ProtoReflect.Descriptor instead.
func (*SnapMetadata) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_sample_proto_rawDescGZIP(), []int{1}
}

func (x *SnapMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SnapMetadata) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type SessionMetadata struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SessionId        string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	LoginTime        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"`
	Host             string                 `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	ProgramName      string                 `protobuf:"bytes,4,opt,name=program_name,json=programName,proto3" json:"program_name,omitempty"`
	LoginName        string                 `protobuf:"bytes,5,opt,name=login_name,json=loginName,proto3" json:"login_name,omitempty"`
	Status           string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	LastRequestStart *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_request_start,json=lastRequestStart,proto3" json:"last_request_start,omitempty"`
	LastRequestEnd   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_request_end,json=lastRequestEnd,proto3" json:"last_request_end,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SessionMetadata) Reset() {
	*x = SessionMetadata{}
	mi := &file_database_monitoring_v1_sample_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionMetadata) ProtoMessage() {}

func (x *SessionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_sample_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionMetadata.ProtoReflect.Descriptor instead.
func (*SessionMetadata) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_sample_proto_rawDescGZIP(), []int{2}
}

func (x *SessionMetadata) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SessionMetadata) GetLoginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LoginTime
	}
	return nil
}

func (x *SessionMetadata) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SessionMetadata) GetProgramName() string {
	if x != nil {
		return x.ProgramName
	}
	return ""
}

func (x *SessionMetadata) GetLoginName() string {
	if x != nil {
		return x.LoginName
	}
	return ""
}

func (x *SessionMetadata) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SessionMetadata) GetLastRequestStart() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRequestStart
	}
	return nil
}

func (x *SessionMetadata) GetLastRequestEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRequestEnd
	}
	return nil
}

type DBMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DatabaseId    string                 `protobuf:"bytes,1,opt,name=database_id,json=databaseId,proto3" json:"database_id,omitempty"`
	DatabaseName  string                 `protobuf:"bytes,2,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DBMetadata) Reset() {
	*x = DBMetadata{}
	mi := &file_database_monitoring_v1_sample_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DBMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBMetadata) ProtoMessage() {}

func (x *DBMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_sample_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBMetadata.ProtoReflect.Descriptor instead.
func (*DBMetadata) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_sample_proto_rawDescGZIP(), []int{3}
}

func (x *DBMetadata) GetDatabaseId() string {
	if x != nil {
		return x.DatabaseId
	}
	return ""
}

func (x *DBMetadata) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

type BlockMetadata struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BlockedBy       string                 `protobuf:"bytes,1,opt,name=blocked_by,json=blockedBy,proto3" json:"blocked_by,omitempty"`
	BlockedSessions []string               `protobuf:"bytes,2,rep,name=blocked_sessions,json=blockedSessions,proto3" json:"blocked_sessions,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BlockMetadata) Reset() {
	*x = BlockMetadata{}
	mi := &file_database_monitoring_v1_sample_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockMetadata) ProtoMessage() {}

func (x *BlockMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_sample_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockMetadata.ProtoReflect.Descriptor instead.
func (*BlockMetadata) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_sample_proto_rawDescGZIP(), []int{4}
}

func (x *BlockMetadata) GetBlockedBy() string {
	if x != nil {
		return x.BlockedBy
	}
	return ""
}

func (x *BlockMetadata) GetBlockedSessions() []string {
	if x != nil {
		return x.BlockedSessions
	}
	return nil
}

type WaitMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WaitType      string                 `protobuf:"bytes,1,opt,name=wait_type,json=waitType,proto3" json:"wait_type,omitempty"`
	WaitTime      int64                  `protobuf:"varint,2,opt,name=wait_time,json=waitTime,proto3" json:"wait_time,omitempty"`
	LastWaitType  string                 `protobuf:"bytes,3,opt,name=last_wait_type,json=lastWaitType,proto3" json:"last_wait_type,omitempty"`
	WaitResource  string                 `protobuf:"bytes,4,opt,name=wait_resource,json=waitResource,proto3" json:"wait_resource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitMetadata) Reset() {
	*x = WaitMetadata{}
	mi := &file_database_monitoring_v1_sample_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitMetadata) ProtoMessage() {}

func (x *WaitMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_sample_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitMetadata.ProtoReflect.Descriptor instead.
func (*WaitMetadata) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_sample_proto_rawDescGZIP(), []int{5}
}

func (x *WaitMetadata) GetWaitType() string {
	if x != nil {
		return x.WaitType
	}
	return ""
}

func (x *WaitMetadata) GetWaitTime() int64 {
	if x != nil {
		return x.WaitTime
	}
	return 0
}

func (x *WaitMetadata) GetLastWaitType() string {
	if x != nil {
		return x.LastWaitType
	}
	return ""
}

func (x *WaitMetadata) GetWaitResource() string {
	if x != nil {
		return x.WaitResource
	}
	return ""
}

type QueryMetric struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	QueryHash             []byte                 `protobuf:"bytes,1,opt,name=query_hash,json=queryHash,proto3" json:"query_hash,omitempty"`
	Text                  string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Db                    *DBMetadata            `protobuf:"bytes,3,opt,name=db,proto3" json:"db,omitempty"`
	LastExecutionTime     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_execution_time,json=lastExecutionTime,proto3" json:"last_execution_time,omitempty"`
	LastElapsedTimeMicros int64                  `protobuf:"varint,5,opt,name=last_elapsed_time_micros,json=lastElapsedTimeMicros,proto3" json:"last_elapsed_time_micros,omitempty"`
	Counters              map[string]int64       `protobuf:"bytes,6,rep,name=counters,proto3" json:"counters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Rates                 map[string]float64     `protobuf:"bytes,7,rep,name=rates,proto3" json:"rates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *QueryMetric) Reset() {
	*x = QueryMetric{}
	mi := &file_database_monitoring_v1_sample_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMetric) ProtoMessage() {}

func (x *QueryMetric) ProtoReflect() protoreflect.Message {
	mi := &file_database_monitoring_v1_sample_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMetric.ProtoReflect.Descriptor instead.
func (*QueryMetric) Descriptor() ([]byte, []int) {
	return file_database_monitoring_v1_sample_proto_rawDescGZIP(), []int{6}
}

func (x *QueryMetric) GetQueryHash() []byte {
	if x != nil {
		return x.QueryHash
	}
	return nil
}

func (x *QueryMetric) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *QueryMetric) GetDb() *DBMetadata {
	if x != nil {
		return x.Db
	}
	return nil
}

func (x *QueryMetric) GetLastExecutionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastExecutionTime
	}
	return nil
}

func (x *QueryMetric) GetLastElapsedTimeMicros() int64 {
	if x != nil {
		return x.LastElapsedTimeMicros
	}
	return 0
}

func (x *QueryMetric) GetCounters() map[string]int64 {
	if x != nil {
		return x.Counters
	}
	return nil
}

func (x *QueryMetric) GetRates() map[string]float64 {
	if x != nil {
		return x.Rates
	}
	return nil
}

var File_database_monitoring_v1_sample_proto protoreflect.FileDescriptor

const file_database_monitoring_v1_sample_proto_rawDesc = "" +
	"\n" +
	"#database_monitoring/v1/sample.proto\x12\x16database_monitoring.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb0\x04\n" +
	"\vQuerySample\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"sql_handle\x18\x02 \x01(\fR\tsqlHandle\x12\x12\n" +
	"\x04text\x18\x03 \x01(\tR\x04text\x12\x18\n" +
	"\ablocked\x18\x04 \x01(\bR\ablocked\x12\x18\n" +
	"\ablocker\x18\x05 \x01(\bR\ablocker\x12.\n" +
	"\x13time_elapsed_millis\x18\n" +
	" \x01(\x03R\x11timeElapsedMillis\x12A\n" +
	"\asession\x18\x06 \x01(\v2'.database_monitoring.v1.SessionMetadataR\asession\x122\n" +
	"\x02db\x18\a \x01(\v2\".database_monitoring.v1.DBMetadataR\x02db\x12D\n" +
	"\n" +
	"block_info\x18\b \x01(\v2%.database_monitoring.v1.BlockMetadataR\tblockInfo\x12A\n" +
	"\twait_info\x18\t \x01(\v2$.database_monitoring.v1.WaitMetadataR\bwaitInfo\x12A\n" +
	"\tsnap_info\x18\v \x01(\v2$.database_monitoring.v1.SnapMetadataR\bsnapInfo\x12\x1f\n" +
	"\vplan_handle\x18\f \x01(\fR\n" +
	"planHandle\x12\x0e\n" +
	"\x02id\x18\r \x01(\tR\x02id\"X\n" +
	"\fSnapMetadata\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xe9\x02\n" +
	"\x0fSessionMetadata\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x129\n" +
	"\n" +
	"login_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tloginTime\x12\x12\n" +
	"\x04host\x18\x03 \x01(\tR\x04host\x12!\n" +
	"\fprogram_name\x18\x04 \x01(\tR\vprogramName\x12\x1d\n" +
	"\n" +
	"login_name\x18\x05 \x01(\tR\tloginName\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12H\n" +
	"\x12last_request_start\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x10lastRequestStart\x12D\n" +
	"\x10last_request_end\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\x0elastRequestEnd\"R\n" +
	"\n" +
	"DBMetadata\x12\x1f\n" +
	"\vdatabase_id\x18\x01 \x01(\tR\n" +
	"databaseId\x12#\n" +
	"\rdatabase_name\x18\x02 \x01(\tR\fdatabaseName\"Y\n" +
	"\rBlockMetadata\x12\x1d\n" +
	"\n" +
	"blocked_by\x18\x01 \x01(\tR\tblockedBy\x12)\n" +
	"\x10blocked_sessions\x18\x02 \x03(\tR\x0fblockedSessions\"\x93\x01\n" +
	"\fWaitMetadata\x12\x1b\n" +
	"\twait_type\x18\x01 \x01(\tR\bwaitType\x12\x1b\n" +
	"\twait_time\x18\x02 \x01(\x03R\bwaitTime\x12$\n" +
	"\x0elast_wait_type\x18\x03 \x01(\tR\flastWaitType\x12#\n" +
	"\rwait_resource\x18\x04 \x01(\tR\fwaitResource\"\x85\x04\n" +
	"\vQueryMetric\x12\x1d\n" +
	"\n" +
	"query_hash\x18\x01 \x01(\fR\tqueryHash\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x122\n" +
	"\x02db\x18\x03 \x01(\v2\".database_monitoring.v1.DBMetadataR\x02db\x12J\n" +
	"\x13last_execution_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x11lastExecutionTime\x127\n" +
	"\x18last_elapsed_time_micros\x18\x05 \x01(\x03R\x15lastElapsedTimeMicros\x12M\n" +
	"\bcounters\x18\x06 \x03(\v21.database_monitoring.v1.QueryMetric.CountersEntryR\bcounters\x12D\n" +
	"\x05rates\x18\a \x03(\v2..database_monitoring.v1.QueryMetric.RatesEntryR\x05rates\x1a;\n" +
	"\rCountersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1a8\n" +
	"\n" +
	"RatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01BUZSgithub.com/guilhermearpassos/database-monitoring/proto/database_monitoring/v1;dbmv1b\x06proto3"

var (
	file_database_monitoring_v1_sample_proto_rawDescOnce sync.Once
	file_database_monitoring_v1_sample_proto_rawDescData []byte
)

func file_database_monitoring_v1_sample_proto_rawDescGZIP() []byte {
	file_database_monitoring_v1_sample_proto_rawDescOnce.Do(func() {
		file_database_monitoring_v1_sample_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_database_monitoring_v1_sample_proto_rawDesc), len(file_database_monitoring_v1_sample_proto_rawDesc)))
	})
	return file_database_monitoring_v1_sample_proto_rawDescData
}

var file_database_monitoring_v1_sample_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_database_monitoring_v1_sample_proto_goTypes = []any{
	(*QuerySample)(nil),           // 0: database_monitoring.v1.QuerySample
	(*SnapMetadata)(nil),          // 1: database_monitoring.v1.SnapMetadata
	(*SessionMetadata)(nil),       // 2: database_monitoring.v1.SessionMetadata
	(*DBMetadata)(nil),            // 3: database_monitoring.v1.DBMetadata
	(*BlockMetadata)(nil),         // 4: database_monitoring.v1.BlockMetadata
	(*WaitMetadata)(nil),          // 5: database_monitoring.v1.WaitMetadata
	(*QueryMetric)(nil),           // 6: database_monitoring.v1.QueryMetric
	nil,                           // 7: database_monitoring.v1.QueryMetric.CountersEntry
	nil,                           // 8: database_monitoring.v1.QueryMetric.RatesEntry
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_database_monitoring_v1_sample_proto_depIdxs = []int32{
	2,  // 0: database_monitoring.v1.QuerySample.session:type_name -> database_monitoring.v1.SessionMetadata
	3,  // 1: database_monitoring.v1.QuerySample.db:type_name -> database_monitoring.v1.DBMetadata
	4,  // 2: database_monitoring.v1.QuerySample.block_info:type_name -> database_monitoring.v1.BlockMetadata
	5,  // 3: database_monitoring.v1.QuerySample.wait_info:type_name -> database_monitoring.v1.WaitMetadata
	1,  // 4: database_monitoring.v1.QuerySample.snap_info:type_name -> database_monitoring.v1.SnapMetadata
	9,  // 5: database_monitoring.v1.SnapMetadata.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 6: database_monitoring.v1.SessionMetadata.login_time:type_name -> google.protobuf.Timestamp
	9,  // 7: database_monitoring.v1.SessionMetadata.last_request_start:type_name -> google.protobuf.Timestamp
	9,  // 8: database_monitoring.v1.SessionMetadata.last_request_end:type_name -> google.protobuf.Timestamp
	3,  // 9: database_monitoring.v1.QueryMetric.db:type_name -> database_monitoring.v1.DBMetadata
	9,  // 10: database_monitoring.v1.QueryMetric.last_execution_time:type_name -> google.protobuf.Timestamp
	7,  // 11: database_monitoring.v1.QueryMetric.counters:type_name -> database_monitoring.v1.QueryMetric.CountersEntry
	8,  // 12: database_monitoring.v1.QueryMetric.rates:type_name -> database_monitoring.v1.QueryMetric.RatesEntry
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_database_monitoring_v1_sample_proto_init() }
func file_database_monitoring_v1_sample_proto_init() {
	if File_database_monitoring_v1_sample_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_database_monitoring_v1_sample_proto_rawDesc), len(file_database_monitoring_v1_sample_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_database_monitoring_v1_sample_proto_goTypes,
		DependencyIndexes: file_database_monitoring_v1_sample_proto_depIdxs,
		MessageInfos:      file_database_monitoring_v1_sample_proto_msgTypes,
	}.Build()
	File_database_monitoring_v1_sample_proto = out.File
	file_database_monitoring_v1_sample_proto_goTypes = nil
	file_database_monitoring_v1_sample_proto_depIdxs = nil
}
